
/* Jardin Solar, Solar sound, Carmen Gonzalez 2009 */

// pins de datos.
int potPin = 2;
int speakerPin = 9;
int val;

// lectura de pin 13 para led
int ledPin = 13;
int statePin = LOW;

// umbral de lectura analoga
int threshold = 10;

// variables para generar notas, beats, tempo y melodia
int length = 25; // the number of notes
char notes[] = "cdefgabcCpppCCeeffggaappF"; // a space represents a rest
int beats[] = {3,2,1,3,2,1,3,2,1,2,3,2,3,4,5,1,2,1,3,4,2,1,4,3,2};
int tempo = 300;

// configuracion para tocar los tonos en la frecuencia asignada.
void playTone(int tone, int duration) {
  Serial.print(val,DEC);
  Serial.print("  ");
  for (long i = 0; i < duration * 1000L; i += tone * 2) {
    digitalWrite(speakerPin, HIGH);
    delayMicroseconds(tone);
    digitalWrite(speakerPin, LOW);
    delayMicroseconds(tone);
  }
}

// configuracion para tocar las notas
void playNote(char note, int duration) {
  char names[] = { 'c', 'd', 'e', 'f', 'g', 'a', 'b', 'C', 'p', 'F' };
  int tones[] = { 1915, 3700, 2519, 3432, 1275, 2136, 3038, 1956, 0, 2550 };

// toca el tono segun la nota asignada
  for (int i = 0; i < 8; i++) {
    if (names[i] == note) {
      playTone(tones[i], duration);
    }
  }
}

void setup() {
  pinMode(speakerPin, OUTPUT);
  Serial.begin(9600); 
}

// loop para tocar la melodia en random
void loop() {
  for (int i = 0; i < length; i++) {
    float r = random(10);
    if (notes[i] == ' ') {
      delay(beats[i] * tempo); // pausa
    } else {
      playNote(notes[i] * r, beats[i] * tempo);
    }
    // pausa entre notas
    delay(1);
    readPots();
    
             statePin = !statePin; // hace lecctura del LED como encendido o papgado de a acuerdo a los freceuncia de los pins digitales
      digitalWrite(ledPin, statePin);  
      
    }
}

void readPots ()
{ 
  //val = analogRead(2); // 
  
  Serial.print(val,DEC);
  Serial.print("  ");

    //tempo = (analogRead (potPin) * 0.7);
    
     tempo = (analogRead (potPin) * 1.9);
     
    //if (val < threshold)  tempo = (analogRead (potPin) * 1.9);
}
